apiVersion: apps/v1
kind: Deployment
metadata:
  name: kahu-backup-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      provider: backup
  template:
    metadata:
      labels:
        provider: backup
    spec:
      containers:
        - image: {{ .Values.controllers.backupController.image }}
          imagePullPolicy: {{ .Values.controllers.backupController.imagePullPolicy }}
          name: backup
          command: ["/usr/local/bin/kahuserver"]
          args:
          - --meta-address= {{ .Values.controllers.backupController.metaServiceAddr }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: kahu
  name: kahu-backup-clusterrole-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kahu-backup-clusterrole
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: kahu
  name: kahu-backup-clusterrole
  namespace: default
rules:
  - apiGroups:
    - "kahu.io"
    resources:
      - backups
      - backups/status
    verbs:
      - get
      - watch
      - list
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    provisioner: kahu
  name: kahu-backup-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kahu-backup-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    provisioner: kahu
  name: kahu-backup-role
  namespace: default
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs:
      - get
      - list
